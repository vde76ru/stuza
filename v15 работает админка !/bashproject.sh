#!/bin/bash

# =============================================================================
# –°–ö–†–ò–ü–¢ –ü–ï–†–ï–°–ë–û–†–ö–ò –ü–†–û–ï–ö–¢–ê "–°–¢–£–ñ–ê"
# =============================================================================

echo "üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–ï–†–ï–°–ë–û–†–ö–£ –ü–†–û–ï–ö–¢–ê –°–¢–£–ñ–ê..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd /var/www/www-root/data/www/stuj.ru

echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# =============================================================================
# –®–ê–ì 1: –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CORS MIDDLEWARE
# =============================================================================

echo ""
echo "üîß –®–ê–ì 1: –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–†–ò–¢–ò–ß–ï–°–ö–û–ô –û–®–ò–ë–ö–ò CORS..."

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
cp app/Http/Kernel.php app/Http/Kernel.php.backup.$(date +%Y%m%d_%H%M%S)

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º CORS middleware
sed -i 's/\\Fruitcake\\Cors\\HandleCors::class/\\Illuminate\\Http\\Middleware\\HandleCors::class/g' app/Http/Kernel.php

echo "‚úÖ CORS middleware –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
if php -l app/Http/Kernel.php; then
    echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å Kernel.php –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
else
    echo "‚ùå –û–®–ò–ë–ö–ê –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ Kernel.php! –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    cp app/Http/Kernel.php.backup.* app/Http/Kernel.php
    exit 1
fi

# =============================================================================
# –®–ê–ì 2: –û–ß–ò–°–¢–ö–ê –ö–≠–®–ï–ô LARAVEL
# =============================================================================

echo ""
echo "üßπ –®–ê–ì 2: –û–ß–ò–°–¢–ö–ê –ö–≠–®–ï–ô LARAVEL..."

# –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏ Laravel
php artisan config:clear
php artisan route:clear
php artisan view:clear
php artisan cache:clear

# –û—á–∏—â–∞–µ–º –∫—ç—à Composer autoload
composer dump-autoload

echo "‚úÖ –ö—ç—à–∏ Laravel –æ—á–∏—â–µ–Ω—ã"

# =============================================================================
# –®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –ò –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô BACKEND
# =============================================================================

echo ""
echo "üì¶ –®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô BACKEND..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º composer.json
if [ -f "composer.json" ]; then
    echo "üìÑ composer.json –Ω–∞–π–¥–µ–Ω"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º Composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    composer install --no-dev --optimize-autoloader
    
    echo "‚úÖ Composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå composer.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# =============================================================================
# –®–ê–ì 4: –ü–†–û–í–ï–†–ö–ê –ò –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô FRONTEND
# =============================================================================

echo ""
echo "üé® –®–ê–ì 4: –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô FRONTEND..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
if [ -f "package.json" ]; then
    echo "üìÑ package.json –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ node_modules
    if [ ! -d "node_modules" ] || [ ! -f "node_modules/.package-lock.json" ]; then
        echo "üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NPM –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        npm install
    else
        echo "üì¶ node_modules —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
        npm ci
    fi
    
    echo "‚úÖ NPM –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# =============================================================================
# –®–ê–ì 5: –°–ë–û–†–ö–ê FRONTEND (VUE + VITE)
# =============================================================================

echo ""
echo "üèóÔ∏è –®–ê–ì 5: –°–ë–û–†–ö–ê FRONTEND..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ vite.config.js
if [ -f "vite.config.js" ]; then
    echo "‚ö° –ù–∞–π–¥–µ–Ω vite.config.js, –∏—Å–ø–æ–ª—å–∑—É–µ–º Vite..."
    
    # –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    npm run build
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–±–æ—Ä–∫–µ frontend!"
        exit 1
    fi
else
    echo "‚ùå vite.config.js –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi


# =============================================================================
# –®–ê–ì 7: –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# =============================================================================

echo ""
echo "‚öôÔ∏è –®–ê–ì 7: –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–π .env —Ñ–∞–π–ª
if [ -f "/etc/stuj/.env" ]; then
    echo "‚úÖ –í–Ω–µ—à–Ω–∏–π .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: /etc/stuj/.env"
else
    echo "‚ö†Ô∏è –í–Ω–µ—à–Ω–∏–π .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ /etc/stuj/.env"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π .env
    if [ -f ".env" ]; then
        echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω! –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
        if [ -f ".env.example" ]; then
            cp .env.example .env
            echo "‚ö†Ô∏è –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .env.example –≤ .env - –ù–£–ñ–ù–û –ù–ê–°–¢–†–û–ò–¢–¨!"
        fi
    fi
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if ! grep -q "APP_KEY=base64:" .env 2>/dev/null && ! grep -q "APP_KEY=base64:" /etc/stuj/.env 2>/dev/null; then
    echo "üîë –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    php artisan key:generate
fi

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"

# =============================================================================
# –®–ê–ì 8: –ú–ò–ì–†–ê–¶–ò–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•
# =============================================================================

echo ""
echo "üóÑÔ∏è –®–ê–ì 8: –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö..."
if php artisan migrate:status >/dev/null 2>&1; then
    echo "‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
    php artisan migrate --force
    
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
else
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ë–î –≤ .env —Ñ–∞–π–ª–µ"
fi

# =============================================================================
# –®–ê–ì 9: –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í (–ï–°–õ–ò –ù–£–ñ–ù–û)
# =============================================================================

echo ""
echo "üîÑ –®–ê–ì 9: –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í..."

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º PHP-FPM (–¥–ª—è ISPmanager)
if systemctl is-active --quiet php8.1-fpm; then
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º PHP-FPM..."
    systemctl reload php8.1-fpm
    echo "‚úÖ PHP-FPM –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx
if systemctl is-active --quiet nginx; then
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx..."
    systemctl reload nginx
    echo "‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
fi

# =============================================================================
# –®–ê–ì 10: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
# =============================================================================

echo ""
echo "üß™ –®–ê–ì 10: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞..."
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://stuj.ru/ || echo "000")

case $HTTP_STATUS in
    200)
        echo "‚úÖ –£–°–ü–ï–•! –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP 200)"
        ;;
    500)
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (HTTP 500) - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏"
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–∑ –ª–æ–≥–∞:"
        tail -5 storage/logs/laravel.log 2>/dev/null || echo "   –õ–æ–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        ;;
    404)
        echo "‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (HTTP 404) - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–æ—É—Ç—ã"
        ;;
    000)
        echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä"
        ;;
    *)
        echo "‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: HTTP $HTTP_STATUS"
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
echo "üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º API..."
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://stuj.ru/api/catalog || echo "000")
if [ "$API_STATUS" = "200" ]; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $API_STATUS)"
fi

# =============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï
# =============================================================================

echo ""
echo "üéâ –ü–ï–†–ï–°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:"
echo "   üåê –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: HTTP $HTTP_STATUS"
echo "   üîå API —Å—Ç–∞—Ç—É—Å: HTTP $API_STATUS"
echo "   üìÅ –ü—Ä–æ–µ–∫—Ç: /var/www/www-root/data/www/stuj.ru"
echo ""

if [ "$HTTP_STATUS" = "200" ]; then
    echo "‚úÖ –í–°–ï –ì–û–¢–û–í–û! –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
    echo ""
    echo "üîó –°—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:"
    echo "   üì± –°–∞–π—Ç: http://stuj.ru/"
    echo "   ‚öôÔ∏è –ê–¥–º–∏–Ω–∫–∞: http://stuj.ru/admin"
    echo "   üîå API –∫–∞—Ç–∞–ª–æ–≥: http://stuj.ru/api/catalog"
else
    echo "‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê"
    echo ""
    echo "üîç –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   tail -20 storage/logs/laravel.log"
    echo "   php artisan route:list"
    echo "   php artisan config:show"
fi

echo ""
echo "üìù –õ–æ–≥–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: rebuild.log"